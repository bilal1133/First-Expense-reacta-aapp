{"version":3,"sources":["components/SingleExpensePage.js","display/visibility.js","components/ExpenseList.js","components/FilterComponents.js","action/filtersAction.js","components/DashbordPage.js","components/ExpenceForm.js","components/AddExpensePage.js","action/expencesActions.js","components/HelpPage.js","components/PageNotFound.js","components/EditExpencePage.js","components/Header.js","routes/router.js","reducers/expenseReducer.js","reducers/filterReducer.js","App.js","store/firstStore.js","index.js"],"names":["id","description","note","amount","createdAt","to","expenses","text","startingDate","endingDate","sortBy","filter","expense","createdAtMoment","moment","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textMatch","toLowerCase","includes","console","log","sort","a","b","connect","state","selectExpenses","filters","props","map","SingleExpensePage","key","FilterComponents","focusedInput","type","placeholder","value","this","onChange","e","dispatch","target","DateRangePicker","startDate","endDate","onDatesChange","date","setEndDate","onFocusChange","setState","isOutsideRange","showClearDates","React","Component","ExpenseForm","onSubmit","preventDefault","error","undefined","parseFloat","valueOf","focused","persist","SingleDatePicker","onDateChange","numberOfMonths","uuid","addExpense","history","push","HelpPage","PageNotFound","find","match","params","updates","onClick","Header","activeClassName","exact","AppRouter","path","component","DashbordPage","AddExpensePage","EditExpencePage","expenceDefaultState","expenseReducer","action","singleExpense","filterDefaultState","startOf","endOf","filterReducer","store","createStore","combineReducers","window","__REDUX_DEVTOOLS_EXTENSION__","getState","finalStore","visibility","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b52241b3.chunk.js","sourcesContent":["import React  from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nexport default ({id, description,note,amount,createdAt})=>(\r\n    <div>\r\n    <h4>\r\n       <Link to={`/edit/${id}`}>{description}</Link>\r\n    </h4>\r\n        <p>\r\n            {note}\r\n        </p>\r\n\r\n        <p>\r\n            {amount}-{createdAt}\r\n        </p>\r\n    </div>\r\n)\r\n\r\n","// import store from '../store/firstStore'\r\nimport moment from 'moment'\r\nexport default (expenses, {text, startingDate, endingDate, sortBy}) => {\r\n    return expenses.filter((expense) => {\r\n        const createdAtMoment = moment(expense.createdAt);\r\n\r\n        const startDateMatch = startingDate ? startingDate.isSameOrBefore(createdAtMoment, 'day') : true;\r\n        const endDateMatch = endingDate ? endingDate.isSameOrAfter(createdAtMoment, 'day') : true;\r\n        const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\r\n        console.log(`createdAtMoment = ${createdAtMoment} startDateMatch=${startDateMatch} endDateMatch= ${endDateMatch}`)\r\n        return startDateMatch && endDateMatch && textMatch;\r\n    }).sort((a, b) => {\r\n        if (sortBy === 'date') {\r\n            return a.createdAt < b.createdAt ? 1 : -1;\r\n        } else if (sortBy === 'amount') {\r\n            return a.amount < b.amount ? 1 : -1;\r\n        }\r\n    });\r\n};","import React from \"react\";\r\nimport SingleExpensePage from \"./SingleExpensePage\";\r\nimport {connect} from \"react-redux\";\r\nimport selectExpenses from \"../display/visibility\";\r\n\r\nconst ExpenseList= (props)=>\r\n    (\r\n        <div>\r\n            {props.expenses.map((expense)=>\r\n                (\r\n                    <SingleExpensePage key={expense.id} {...expense}/>)\r\n            )\r\n            }\r\n        </div>\r\n    )\r\nconst mapStoreToState=(state)=>{\r\n    return{\r\n        expenses:selectExpenses(state.expenses, state.filters)\r\n    }\r\n}\r\nexport default connect(mapStoreToState)(ExpenseList)","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {setEndDate, setStartDate, setText, sortByAmount, sortByDate} from \"../action/filtersAction\";\r\nimport DateRangePicker from \"react-dates/esm/components/DateRangePicker\";\r\nimport SingleDatePicker from \"react-dates/esm/components/SingleDatePicker\";\r\n\r\nclass FilterComponents extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            focusedInput:null\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input\r\n                    type='text'\r\n                    placeholder={'Text'}\r\n                    value={this.props.filters.text}\r\n                    onChange={(e)=>{\r\n                        this.props.dispatch(setText(e.target.value))\r\n                    }}\r\n                />\r\n                <select\r\n                    value={this.props.filters.sortBy}\r\n                    onChange={(e)=>{\r\n                        if(e.target.value === 'amount'){\r\n                            this.props.dispatch(sortByAmount())\r\n                        }else if(e.target.value === 'date'){\r\n                            this.props.dispatch(sortByDate())\r\n                        }\r\n                    }}\r\n                >\r\n                        <option value=\"amount\">Amount</option>\r\n                        <option value=\"date\">Date</option>\r\n                </select>\r\n\r\n                {/* eslint-disable-next-line react/jsx-no-undef */}\r\n                <DateRangePicker\r\n                    startDate={this.props.filters.startingDate} // momentPropTypes.momentObj or null,\r\n                    endDate={this.props.filters.endingDate} // momentPropTypes.momentObj or null,\r\n                    onDatesChange={({ startDate, endDate }) => {\r\n                        this.props.dispatch(setStartDate(startDate))\r\n                        this.props.dispatch(setEndDate(endDate))\r\n                    }} // PropTypes.func.isRequired,\r\n                    focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n                    onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\r\n                    isOutsideRange={() => false}\r\n                    showClearDates={true}\r\n                />\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStoreToState=(state)=>{\r\n    return{\r\n        filters:state.filters\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToState)(FilterComponents);","// Set Text\r\n\r\nexport const setText=(text)=>{\r\n    return {\r\n        type:\"TEXT\",\r\n        text\r\n    }\r\n}\r\n\r\n// Sort By Date\r\nexport const  sortByDate=()=>{\r\n    return {\r\n        type:'SORT_BY_DATE'\r\n    }\r\n}\r\n\r\n// sort by amount\r\nexport const  sortByAmount=()=>{\r\n    return {\r\n        type:'SORT_BY_AMOUNT'\r\n    }\r\n}\r\n\r\n// set Starting Date\r\nexport const setStartDate=(date)=>{\r\n    return{\r\n        type:'SET_START_DATE',\r\n        date\r\n    }\r\n}\r\n\r\n// set Ending Date\r\nexport const setEndDate=(date)=>{\r\n    return{\r\n        type:'SET_END_DATE',\r\n        date\r\n    }\r\n}","import React from 'react'\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport FilterComponents from \"./FilterComponents\";\r\nexport default()=>(\r\n    <div>\r\n        {console.log(\"DASHBOARD\")}\r\n        <h1>DASHBOARD </h1>\r\n        <h1>$_*</h1>\r\n     <FilterComponents/>\r\n     <ExpenseList/>\r\n    </div>\r\n)\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport 'react-dates/initialize';\r\nimport SingleDatePicker from \"react-dates/esm/components/SingleDatePicker\";\r\nimport {addExpense} from \"../action/expencesActions\";\r\nclass ExpenseForm extends React.Component{\r\n   constructor(props) {\r\n       super(props);\r\n       this.state={\r\n           description: props.expense ?  props.expense.description :'',\r\n           note: props.expense ? props.expense.note : '',\r\n           createdAt:props.expense ? moment(props.expense.createdAt) : moment(),\r\n           amount:props.expense ? props.expense.amount :'',\r\n           focused:false,\r\n           error:undefined\r\n       }\r\n   }\r\n    onSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(!this.state.description || !this.state.amount){\r\n            this.setState({error:true});\r\n        }else{\r\n            this.setState({error:undefined});\r\n            console.log(this.state)\r\n            this.props.onSubmit(\r\n                {description:this.state.description,\r\n                amount:parseFloat(this.state.amount),\r\n                note:this.state.note,\r\n                createdAt: this.state.createdAt.valueOf()\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.error ? <h1>Please Enter Description and Amount</h1>:undefined}\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input\r\n                        type='text'\r\n                        value={this.state.description}\r\n                        placeholder='Description'\r\n                        onChange={(e)=>{\r\n                            e.persist();\r\n                            this.setState(()=>({description:e.target.value}))\r\n                        }}\r\n                    />\r\n                    <input\r\n                        type={'number'}\r\n                        placeholder={'Amount'}\r\n                        value={this.state.amount}\r\n                        onChange={(e)=>{\r\n                            e.persist();\r\n                            this.setState({amount:e.target.value})\r\n                        }}\r\n                    />\r\n                    <textarea\r\n                    value={this.state.note}\r\n                    placeholder={'Note : to take a hint  (OPTIONAL)'}\r\n                    onChange={(e)=>{\r\n                        e.persist();\r\n                        this.setState({note:e.target.value})\r\n                    }\r\n                    }\r\n                    >\r\n                     </textarea>\r\n                    {/* eslint-disable-next-line react/jsx-no-undef */}\r\n                    <SingleDatePicker\r\n                        date={this.state.createdAt} // momentPropTypes.momentObj or null\r\n                        onDateChange={date => this.setState({ createdAt:date })} // PropTypes.func.isRequired\r\n                        focused={this.state.focused} // PropTypes.bool\r\n                        onFocusChange={({ focused }) => this.setState({ focused })} // PropTypes.func.isRequired\r\n                        numberOfMonths={1}\r\n                        isOutsideRange={() => false}\r\n                    />\r\n                    <button>ADD EXPENSE</button>\r\n                </form>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}\r\nexport default ExpenseForm","import React from 'react'\r\nimport ExpenseForm from \"./ExpenceForm\"\r\nimport {addExpense} from \"../action/expencesActions\";\r\nimport {connect} from \"react-redux\";\r\nconst AddExpensePage =(props)=>(\r\n    <div>\r\n        <h1>Create</h1>\r\n        <ExpenseForm\r\n            onSubmit={(expense)=>{\r\n                console.log(\"Submitted\")\r\n                console.log(expense)\r\n\r\n                props.dispatch(addExpense(expense));\r\n                props.history.push(\"/\")\r\n\r\n        }}/>\r\n    </div>\r\n)\r\n\r\n export default connect()(AddExpensePage);","import uuid from 'uuid'\r\n export const addExpense = ({description='',note='',amount=0,createdAt=0}={})=>(\r\n    {\r\n   type:'ADD',\r\n    expense:{\r\n        id:uuid(),\r\n        description,\r\n        note,\r\n        amount,\r\n        createdAt,\r\n    }\r\n})\r\nexport  const editExpence=(id,updates)=>{\r\n   return{type:'EDIT',\r\n       id,\r\n       updates\r\n   }\r\n}\r\nexport const removeExpence =(id)=>{\r\n    // eslint-disable-next-line no-unused-expressions\r\n   return { type:\"REMOVE\",id}\r\n}","import React from 'react';\r\n\r\nconst HelpPage = () => (\r\n  <div>\r\n    This is from my help component\r\n  </div>\r\n);\r\n\r\nexport default HelpPage;\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nconst PageNotFound =()=>(\r\n    <div>\r\n        <h1>404! PageNotFound</h1>\r\n        <Link to='/'>Go Back Home</Link>\r\n    </div>\r\n)\r\nexport default PageNotFound;","import React from 'react'\r\nimport ExpenseForm from \"./ExpenceForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {editExpence, removeExpence} from \"../action/expencesActions\";\r\n\r\nconst EditExpencePage =(props)=>(\r\n    <div>\r\n        <h1>Edit</h1>\r\n        <ExpenseForm\r\n            expense={props.expense}\r\n            onSubmit={(expense)=>{\r\n                props.dispatch(editExpence(props.expense.id,expense))\r\n                props.history.push('/')\r\n            }}\r\n        />\r\n        <button\r\n            onClick={(e)=>{\r\n                console.log('Removing Item')\r\n                props.dispatch(removeExpence(props.expense.id))\r\n                props.history.push('/')\r\n            }\r\n\r\n        }>REMOVE</button>\r\n    </div>\r\n)\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        expense: state.expenses.find((expense) => expense.id === props.match.params.id)\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(EditExpencePage)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <h1>Expensify</h1>\r\n    <NavLink to=\"/\" activeClassName=\"is-active\" exact={true}>Dashboard</NavLink>\r\n    <NavLink to=\"/create\" activeClassName=\"is-active\">Create Expense</NavLink>\r\n    <NavLink to=\"/help\" activeClassName=\"is-active\">Help</NavLink>\r\n  </header>\r\n);\r\nconsole.log(\"From Header\");\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport DashbordPage from '../components/DashbordPage'\r\nimport AddExpensePage from '../components/AddExpensePage'\r\nimport HelpPage from '../components/HelpPage'\r\nimport PageNotFound from '../components/PageNotFound.js'\r\nimport EditExpencePage from '../components/EditExpencePage'\r\nimport Header from '../components/Header';\r\nconst AppRouter =()=>(\r\n    <BrowserRouter>\r\n    <Header/>\r\n                <Switch>\r\n                <Route path=\"/\" component={DashbordPage} exact={true} />\r\n                <Route path=\"/create\" component={AddExpensePage} />\r\n                <Route path=\"/edit/:id\" component={EditExpencePage} />\r\n                <Route path=\"/help\" component={HelpPage} />\r\n                <Route component={PageNotFound} />\r\n                </Switch>\r\n    </BrowserRouter>\r\n\r\n);\r\n\r\nexport default AppRouter;","const expenceDefaultState = [];\r\n const expenseReducer=(state=expenceDefaultState,action)=>{\r\n    switch(action.type){\r\n        case('ADD'):\r\n        return [\r\n            ...state,\r\n            action.expense\r\n          ];\r\n        case('EDIT'):\r\n            console.log(\"In Edit\")\r\n           return state.map((expense)=>{\r\n                if(expense.id === action.id){\r\n\r\n                    return {\r\n                        ...expense,\r\n                        ...action.updates\r\n                    }}else{\r\n                        return expense\r\n                    }\r\n\r\n            })\r\n\r\n        case('REMOVE'):\r\n            return state.filter((singleExpense)=>(\r\n                (singleExpense.id !== action.id)\r\n            ))\r\n        default:\r\n            return state;\r\n    }\r\n }\r\n export default expenseReducer;","import  moment from 'moment'\r\nconst filterDefaultState={\r\n    text:'',\r\n    sortBy:'date',\r\n    startingDate:moment().startOf('month'),\r\n    endingDate:moment().endOf('month')\r\n}\r\n\r\nconst filterReducer=(state=filterDefaultState,action)=>{\r\n    switch(action.type){\r\n        case('TEXT'):\r\n            return {\r\n                ...state,text:action.text\r\n            }\r\n        case('SORT_BY_DATE'):\r\n            return{\r\n                ...state,\r\n                sortBy: 'date'\r\n            }\r\n        case('SORT_BY_AMOUNT'):\r\n            return{\r\n                ...state,\r\n                sortBy: 'amount'\r\n            }\r\n        case('SET_START_DATE'):\r\n            return{\r\n                ...state,\r\n                startingDate: action.date\r\n            }\r\n        case('SET_END_DATE'):\r\n            return{\r\n                ...state,\r\n                endingDate: action.date\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default filterReducer;","import React from 'react';\nimport AppRouter from './routes/router';\nimport firstStore from './store/firstStore'\nimport {addExpense, editExpence, removeExpence} from './action/expencesActions'\nimport uuid from 'uuid'\nimport moment from 'moment'\nimport { Provider } from 'react-redux';\nimport {setText, sortByAmount, sortByDate, setStartDate, setEndDate} from \"./action/filtersAction\";\nimport visibility from \"./display/visibility\";\nconst store=firstStore();\n\nfunction App() {\n  return(\n   <Provider store={store}>\n        <AppRouter />\n   </Provider>\n    )\n}\n\n\n\n// const first=store.dispatch(addExpense({ description: 'Water bill', amount: 4500 }));\n// store.dispatch(addExpense({ description: 'Water bill', amount: 4500 }));\n// store.dispatch(removeExpence(first.expense.id));\n// store.dispatch(editExpence(first.expense.id,{description: \"hi this is updated\",createdAt:1580877878000}))\n// store.dispatch(setText('HI there'))\n// store.dispatch(sortByAmount())\n// store.dispatch(sortByDate())\n//  store.dispatch(setStartDate(0))\n//  store.dispatch(setEndDate(0))\nconst state=store.getState()\nconst finalStore = visibility(state.expenses,state.filters)\n\nconsole.log(finalStore)\nexport default App;\n","import {createStore,combineReducers} from 'redux'\r\nimport expenseReducer from '../reducers/expenseReducer'\r\nimport filterReducer from '../reducers/filterReducer'\r\n\r\nexport default ()=>{\r\n    const store = createStore(\r\n    combineReducers({\r\n      expenses: expenseReducer,\r\n      filters: filterReducer\r\n    }),window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  );\r\n\r\n  return store;}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}